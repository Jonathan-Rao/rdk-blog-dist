(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{443:function(s,a,e){"use strict";e.r(a);var n=e(8),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("img",{staticClass:"lazyload inited loaded",attrs:{width:"400",height:"400",src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/3/13/1697493a9ef970ec~tplv-t2oaga2asx-watermark.awebp"}})]),s._v(" "),a("p",[s._v("Vue 是一个用于构建 Web 应用程序的前端框架，其设计方式使得开发人员可以非常快速地提高工作效率。该框架的各个方面都有很多资料，它的社区也每天都在不断成长。如果你读到了这篇文章，那么这些事儿你很可能已经知道咯。")]),s._v(" "),a("p",[s._v("虽然我们可以快速直接地启动并运行它，但是框架里面那些更复杂和更强大的地方还是需要好好动动脑子才能理解（至少对我是这样）。其中一个是插槽，还有另一个与之相关但功能上不太相同的就是作用域插槽。我学习的时候花了好一阵才理解插槽工作的机制，所以我觉得将我对插槽的理解分享出来是有价值的，因为这没准会帮助到大家。")]),s._v(" "),a("h2",{attrs:{id:"插槽和具名插槽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插槽和具名插槽"}},[s._v("#")]),s._v(" 插槽和具名插槽")]),s._v(" "),a("p",[s._v("父组件以另外一种方式（不是通过常规的 Props 属性传递机制）向子组件传递信息。我发现把这种方法同常规的 HTML 元素联系起来很有帮助。")]),s._v(" "),a("p",[s._v("比如说 HTML 标签。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<a href="/sometarget">This is a link</a>\n复制代码\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v('如果这是在Vue环境中并且<a>是你的组件，那么你需要发送"This is a link"信息到\'a\'组件里面，然后它将被渲染成为一个超链接，而"This is a link"就是这个链接的文本。')]),s._v(" "),a("p",[s._v("让我们定义一个子组件来展示它的机制是怎样的：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("然后在父组件我们这么做：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<template>\n  <div>\n    <child-component>This is from outside</child-component>\n  </div>\n</template>\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v('这时候屏幕上呈现的就应该和你预期的一样就是"This is from outside"，但这是由子组件所渲染出来的。')]),s._v(" "),a("p",[s._v("我们还可以给子组件添加默认的信息，以免到时候这里出现什么都没有传入的情况，就像这样子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<template>\n  <div>\n    <slot>Some default message</slot>\n  </div>\n</template>\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("然后如果我们像这样子创建我们的子组件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<child-component>\n</child-component>\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v('我们可以看到屏幕上会呈现"Some default message"。')]),s._v(" "),a("p",[s._v("具名插槽和常规插槽非常类似，唯一的差别就是你可以在你的目标组件多个位置传入你的文本。")]),s._v(" "),a("p",[s._v("我们把子组件升级一下，让它有多个具名插槽")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<template>\n  <div>\n    <slot>Some default message</slot>\n    <br/>\n    <slot name="top"></slot>\n    <br/>\n    <slot name="bottom"></slot>\n  </div>\n</template>\n复制代码\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("这样,在我们的子组件中就有了三个插槽。其中 top 和 bottom 插槽是具名插槽。")]),s._v(" "),a("p",[s._v("让我们更新父组件以使用它。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<child-component v-slot:top>\nHello there!\n</child-component>\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("注意 ------ 我们在这里使用新的 Vue 2.6 语法来指定我们想要定位的插槽："),a("code",[s._v("v-slot:theName")]),s._v("。")]),s._v(" "),a("p",[s._v('你现在认为会在屏幕上看到什么呢？如果你说是"Hello Top!"，那么你就只说对了一部分。')]),s._v(" "),a("p",[s._v("因为我没有为没有具名的插槽赋予任何值，我们因此也还会得到默认值。所以我们真正会看到的是：")]),s._v(" "),a("p",[s._v("Some default message"),a("br"),s._v("\nHello There!")]),s._v(" "),a("p",[s._v("其实真正意义上没有具名的插槽是被当作'default'，所以你还可以这么做：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<child-component v-slot:default>\nHello There!\n</child-component>\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("现在我们就只会看到：")]),s._v(" "),a("p",[s._v("Hello There!")]),s._v(" "),a("p",[s._v("因为我们已经提供了值给默认（也就是未具名）插槽，因此具名插槽'top'和'bottom'也都没有默认值。")]),s._v(" "),a("p",[s._v("你发送的并不一定只是文本，还可以是其他组件或者 HTML。你可以发送任意你想展示的内容。")]),s._v(" "),a("h2",{attrs:{id:"作用域插槽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域插槽"}},[s._v("#")]),s._v(" 作用域插槽")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/3/13/1697493aa3c19c04~tplv-t2oaga2asx-watermark.awebp",alt:""}})]),s._v(" "),a("p",[s._v("我认为插槽和具名插槽相对简单，一旦你稍微玩玩就可以掌握。可另一方面，作用域插槽虽然名字相似但又有些不同之处。")]),s._v(" "),a("p",[s._v("我倾向于认为作用域插槽有点像一个放映机（或者是一个我欧洲朋友的投影仪）。以下是原因。")]),s._v(" "),a("p",[s._v("子组件中的作用域插槽可以为父组件中的插槽的显示提供数据。这就像一个人带着放映机站在你的子组件里面，然后在父组件的墙上让一些图像发光。")]),s._v(" "),a("p",[s._v("这有一个例子。在子组件中我们像这样设置了一个插槽：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<template>\n  <div>\n    <slot name="top" :myUser="user"></slot>\n    <br/>\n    <slot name="bottom"></slot>\n    <br/>\n  </div>\n</template>\n\n<script>\n\ndata() {\n  return {\n    user: "Ross"\n  }\n}\n\n<\/script>\n复制代码\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("注意到我们的具名插槽'top'现在有了一个名为'myUser'的属性，然后我们绑定了一个动态的值在'user'中。")]),s._v(" "),a("p",[s._v("在我们的父组件中就像这样子设置子组件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<div>\n   <child-component v-slot:top="slotProps">{{ slotProps }}</child-component>\n</div>\n复制代码\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("我们在屏幕上看到的就是这样子：")]),s._v(" "),a("p",[s._v('{ "myUser": "Ross" }')]),s._v(" "),a("p",[s._v("还是使用放映机的类比，我们的子组件通过 myUser 对象将其用户字符串的值传递给父组件。它在父组件上投射到的墙就被称为'slotProps'。")]),s._v(" "),a("p",[s._v("我知道这不是一个完美的类比，但当我第一次尝试理解这个机制的时候，它帮助我以这种方式思考。")]),s._v(" "),a("p",[s._v("Vue 的文档非常好，而且我也已经看到了一些其他关于作用域插槽工作机制的说明。但很多人采取的方法似乎是将父组件中的所有或部分属性命名为与子组件相同，我认为这会使得数据很难被追踪。")]),s._v(" "),a("p",[s._v("在父组件中使用 ES6 解构，我们这样子写还可以将特定 user 对象从插槽属性（你可以随便怎么称呼它）解脱出来：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<child-component v-slot:top="{myUser}">{{ myUser }}</child-component>\n复制代码\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("或者甚至就只是在父组件中给它一个新的名字：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<child-component v-slot:top="{myUser: aFancyName}">{{ aFancyName }}</child-component>\n复制代码\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);